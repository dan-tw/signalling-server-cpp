// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto

#include "auth.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace proto {
class AuthenticationRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthenticationRequest> _instance;
} _AuthenticationRequest_default_instance_;
class AuthenticationResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AuthenticationResponse> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_;
} _AuthenticationResponse_default_instance_;
}  // namespace proto
static void InitDefaultsscc_info_AuthenticationRequest_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_AuthenticationRequest_default_instance_;
    new (ptr) ::proto::AuthenticationRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::AuthenticationRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthenticationRequest_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthenticationRequest_auth_2eproto}, {}};

static void InitDefaultsscc_info_AuthenticationResponse_auth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_AuthenticationResponse_default_instance_;
    new (ptr) ::proto::AuthenticationResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::AuthenticationResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthenticationResponse_auth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AuthenticationResponse_auth_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_auth_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_auth_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_auth_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_auth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::AuthenticationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::AuthenticationRequest, token_),
  PROTOBUF_FIELD_OFFSET(::proto::AuthenticationRequest, provider_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::AuthenticationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::proto::AuthenticationResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::AuthenticationResponse, outcome_),
  offsetof(::proto::AuthenticationResponseDefaultTypeInternal, url_),
  offsetof(::proto::AuthenticationResponseDefaultTypeInternal, id_),
  offsetof(::proto::AuthenticationResponseDefaultTypeInternal, error_),
  PROTOBUF_FIELD_OFFSET(::proto::AuthenticationResponse, payload_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::AuthenticationRequest)},
  { 7, -1, sizeof(::proto::AuthenticationResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_AuthenticationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::_AuthenticationResponse_default_instance_),
};

const char descriptor_table_protodef_auth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nauth.proto\022\005proto\"8\n\025AuthenticationReq"
  "uest\022\r\n\005token\030\001 \001(\t\022\020\n\010provider\030\002 \001(\t\"\323\001"
  "\n\026AuthenticationResponse\0226\n\007outcome\030\001 \001("
  "\0162%.proto.AuthenticationResponse.Outcome"
  "\022\r\n\003url\030\002 \001(\tH\000\022\014\n\002id\030\003 \001(\tH\000\022\017\n\005error\030\004"
  " \001(\tH\000\"H\n\007Outcome\022\014\n\010REDIRECT\020\000\022\021\n\rINVAL"
  "ID_TOKEN\020\001\022\021\n\rAUTHENTICATED\020\002\022\t\n\005ERROR\020\003"
  "B\t\n\007payload2e\n\024AuthenticationPlugin\022M\n\014A"
  "uthenticate\022\034.proto.AuthenticationReques"
  "t\032\035.proto.AuthenticationResponse\"\000B;Z9gi"
  "thub.com/scalablepixelstreaming/framewor"
  "k/pkg/api/protob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_auth_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_auth_2eproto_sccs[2] = {
  &scc_info_AuthenticationRequest_auth_2eproto.base,
  &scc_info_AuthenticationResponse_auth_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_auth_2eproto_once;
static bool descriptor_table_auth_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_auth_2eproto = {
  &descriptor_table_auth_2eproto_initialized, descriptor_table_protodef_auth_2eproto, "auth.proto", 463,
  &descriptor_table_auth_2eproto_once, descriptor_table_auth_2eproto_sccs, descriptor_table_auth_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_auth_2eproto::offsets,
  file_level_metadata_auth_2eproto, 2, file_level_enum_descriptors_auth_2eproto, file_level_service_descriptors_auth_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_auth_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_auth_2eproto), true);
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AuthenticationResponse_Outcome_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_auth_2eproto);
  return file_level_enum_descriptors_auth_2eproto[0];
}
bool AuthenticationResponse_Outcome_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AuthenticationResponse_Outcome AuthenticationResponse::REDIRECT;
constexpr AuthenticationResponse_Outcome AuthenticationResponse::INVALID_TOKEN;
constexpr AuthenticationResponse_Outcome AuthenticationResponse::AUTHENTICATED;
constexpr AuthenticationResponse_Outcome AuthenticationResponse::ERROR;
constexpr AuthenticationResponse_Outcome AuthenticationResponse::Outcome_MIN;
constexpr AuthenticationResponse_Outcome AuthenticationResponse::Outcome_MAX;
constexpr int AuthenticationResponse::Outcome_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void AuthenticationRequest::InitAsDefaultInstance() {
}
class AuthenticationRequest::_Internal {
 public:
};

AuthenticationRequest::AuthenticationRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AuthenticationRequest)
}
AuthenticationRequest::AuthenticationRequest(const AuthenticationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_provider().empty()) {
    provider_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.AuthenticationRequest)
}

void AuthenticationRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthenticationRequest_auth_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AuthenticationRequest::~AuthenticationRequest() {
  // @@protoc_insertion_point(destructor:proto.AuthenticationRequest)
  SharedDtor();
}

void AuthenticationRequest::SharedDtor() {
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticationRequest& AuthenticationRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthenticationRequest_auth_2eproto.base);
  return *internal_default_instance();
}


void AuthenticationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AuthenticationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  provider_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* AuthenticationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.AuthenticationRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string provider = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.AuthenticationRequest.provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthenticationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.AuthenticationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.AuthenticationRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string provider = 2;
  if (this->provider().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_provider().data(), static_cast<int>(this->_internal_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.AuthenticationRequest.provider");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_provider(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AuthenticationRequest)
  return target;
}

size_t AuthenticationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AuthenticationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string provider = 2;
  if (this->provider().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_provider());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AuthenticationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthenticationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AuthenticationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AuthenticationRequest)
    MergeFrom(*source);
  }
}

void AuthenticationRequest::MergeFrom(const AuthenticationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AuthenticationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.provider().size() > 0) {

    provider_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
}

void AuthenticationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AuthenticationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticationRequest::CopyFrom(const AuthenticationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AuthenticationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationRequest::IsInitialized() const {
  return true;
}

void AuthenticationRequest::InternalSwap(AuthenticationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  provider_.Swap(&other->provider_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AuthenticationResponse::InitAsDefaultInstance() {
  ::proto::_AuthenticationResponse_default_instance_.url_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::proto::_AuthenticationResponse_default_instance_.id_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::proto::_AuthenticationResponse_default_instance_.error_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class AuthenticationResponse::_Internal {
 public:
};

AuthenticationResponse::AuthenticationResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AuthenticationResponse)
}
AuthenticationResponse::AuthenticationResponse(const AuthenticationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  outcome_ = from.outcome_;
  clear_has_payload();
  switch (from.payload_case()) {
    case kUrl: {
      _internal_set_url(from._internal_url());
      break;
    }
    case kId: {
      _internal_set_id(from._internal_id());
      break;
    }
    case kError: {
      _internal_set_error(from._internal_error());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.AuthenticationResponse)
}

void AuthenticationResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AuthenticationResponse_auth_2eproto.base);
  outcome_ = 0;
  clear_has_payload();
}

AuthenticationResponse::~AuthenticationResponse() {
  // @@protoc_insertion_point(destructor:proto.AuthenticationResponse)
  SharedDtor();
}

void AuthenticationResponse::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void AuthenticationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AuthenticationResponse& AuthenticationResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AuthenticationResponse_auth_2eproto.base);
  return *internal_default_instance();
}


void AuthenticationResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:proto.AuthenticationResponse)
  switch (payload_case()) {
    case kUrl: {
      payload_.url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kId: {
      payload_.id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kError: {
      payload_.error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void AuthenticationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AuthenticationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outcome_ = 0;
  clear_payload();
  _internal_metadata_.Clear();
}

const char* AuthenticationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.AuthenticationResponse.Outcome outcome = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_outcome(static_cast<::proto::AuthenticationResponse_Outcome>(val));
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.AuthenticationResponse.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.AuthenticationResponse.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.AuthenticationResponse.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AuthenticationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.AuthenticationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AuthenticationResponse.Outcome outcome = 1;
  if (this->outcome() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_outcome(), target);
  }

  // string url = 2;
  if (_internal_has_url()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.AuthenticationResponse.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // string id = 3;
  if (_internal_has_id()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.AuthenticationResponse.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // string error = 4;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.AuthenticationResponse.error");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AuthenticationResponse)
  return target;
}

size_t AuthenticationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AuthenticationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.AuthenticationResponse.Outcome outcome = 1;
  if (this->outcome() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_outcome());
  }

  switch (payload_case()) {
    // string url = 2;
    case kUrl: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_url());
      break;
    }
    // string id = 3;
    case kId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_id());
      break;
    }
    // string error = 4;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AuthenticationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AuthenticationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AuthenticationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AuthenticationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AuthenticationResponse)
    MergeFrom(*source);
  }
}

void AuthenticationResponse::MergeFrom(const AuthenticationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AuthenticationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.outcome() != 0) {
    _internal_set_outcome(from._internal_outcome());
  }
  switch (from.payload_case()) {
    case kUrl: {
      _internal_set_url(from._internal_url());
      break;
    }
    case kId: {
      _internal_set_id(from._internal_id());
      break;
    }
    case kError: {
      _internal_set_error(from._internal_error());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void AuthenticationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AuthenticationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticationResponse::CopyFrom(const AuthenticationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AuthenticationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticationResponse::IsInitialized() const {
  return true;
}

void AuthenticationResponse::InternalSwap(AuthenticationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(outcome_, other->outcome_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::AuthenticationRequest* Arena::CreateMaybeMessage< ::proto::AuthenticationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::AuthenticationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::AuthenticationResponse* Arena::CreateMaybeMessage< ::proto::AuthenticationResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::AuthenticationResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
